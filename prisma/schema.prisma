generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model clientes {
  id             String     @id @default(uuid()) @db.Uuid
  nombre         String     @db.VarChar(100)
  apellido       String     @default("") @db.VarChar(100)
  correo         String     @db.VarChar(100)
  creado_el      DateTime?  @default(now()) @db.Date()
  actualizado_el DateTime?  @default(now()) @db.Date()
  telefono       String?    @db.VarChar(15)
  direccion      String?
  wallet         String?    @db.VarChar
  tipo_documento String     @default("DNI") // DNI o RUC
  documento      String?    @db.VarChar(15) // NÃºmero de documento
  facturas       facturas[]
}

model productos_en_factura {
  id             Int        @id @default(autoincrement())
  factura_id     String?    @db.Uuid
  creado_el      DateTime   @default(now())
  actualizado_el DateTime   @default(now())
  producto_id    String     @db.Uuid
  cantidad       Int
  sub_total      Decimal    @db.Decimal(10, 5)
  facturas       facturas?  @relation(fields: [factura_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  productos      productos? @relation(fields: [producto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model facturas {
  id               String                 @id @default(uuid()) @db.Uuid
  cliente_id       String?                @db.Uuid
  wallet           String?
  hash             String                 @default("N/A")
  fecha            DateTime?              @default(now()) @db.Timestamp(6)
  total            Decimal                @db.Decimal(10, 5)
  estado           String                 @default("pendiente")
  productos        productos_en_factura[]
  clientes         clientes?              @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tasa_dollar      Decimal                @db.Decimal(10, 5)
  sunat_en_factura sunat_en_factura?
}

model sunat_en_factura {
  id           Int       @id @default(autoincrement())
  estado_sunat String    @default("pendiente")
  serie_sunat  String
  xml          String?   @db.Xml
  ticket_xml   String?   @db.Xml
  facturaId    String?   @unique @db.Uuid
  factura      facturas? @relation(fields: [facturaId], references: [id])
}

model productos {
  id                   String                 @id @default(uuid()) @db.Uuid
  nombre               String                 @db.VarChar(100)
  categoria            String                 @db.VarChar(100)
  precio               Decimal                @db.Decimal(10, 5)
  cantidad             Int                    @default(0) @db.Integer
  image                String                 @default("/icon.png") @db.Text()
  descripcion          String                 @db.Text()
  creado_el            DateTime               @default(now())
  actualizado_el       DateTime               @default(now())
  productos_en_factura productos_en_factura[]
}
